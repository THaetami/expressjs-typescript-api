{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "API Documentation",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8000/",
            "description": "Local Dev"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "API for users in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/v1/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user in the system using a unique username.",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/api/v1/auth": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login in system",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "422": {
                        "description": "Failed. Unprocessable Entity."
                    }
                }
            },
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Retrieve data of the currently logged-in user.",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Failed. Unauthenticated"
                    }
                }
            }
        },
        "/api/v1/auth/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the user that we want to match",
                    "type": "number"
                }
            ],
            "delete": {
                "summary": "User logout in system",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Logout user with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "401": {
                        "description": "Failed. Unauthenticated"
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "id": {
                    "type": "number"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}